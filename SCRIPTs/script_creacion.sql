-- 1Ô∏è‚É£ Crear base de datos
CREATE DATABASE IF NOT EXISTS TPI_BACKEND;
USE TPI_BACKEND;

-- 2Ô∏è‚É£ Tabla ESTADO
CREATE TABLE IF NOT EXISTS ESTADO (
    ID_ESTADO INT PRIMARY KEY AUTO_INCREMENT,
    AMBITO VARCHAR(100), -- Ej: 'SOLICITUD', 'TRAMO', 'CONTENEDOR'
    DESCRIPCION VARCHAR(255)
);

-- 3Ô∏è‚É£ Tabla CLIENTE
CREATE TABLE IF NOT EXISTS CLIENTE (
    ID_CLIENTE INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(100),
    APELLIDO VARCHAR(100),
    EMAIL VARCHAR(255),
    TELEFONO VARCHAR(20)
);

-- 4Ô∏è‚É£ Tabla CIUDAD
CREATE TABLE IF NOT EXISTS CIUDAD (
    ID_CIUDAD INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(100),
    PROVINCIA VARCHAR(100)
);

-- 5Ô∏è‚É£ Tabla DEPOSITO
CREATE TABLE IF NOT EXISTS DEPOSITO (
    ID_DEPOSITO INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(255),
    DIRECCION VARCHAR(255),
    COORDENADAS VARCHAR(255),
    COSTO_ESTADIA_DIARIO DOUBLE
);

-- 6Ô∏è‚É£ Tabla CONTENEDOR
CREATE TABLE IF NOT EXISTS CONTENEDOR (
    ID_CONTENEDOR INT PRIMARY KEY AUTO_INCREMENT,
    PESO DOUBLE,
    VOLUMEN DOUBLE,
    ID_ESTADO INT,
    ID_CLIENTE INT,
    FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO(ID_ESTADO),
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

-- 7Ô∏è‚É£ Tabla SOLICITUD
CREATE TABLE IF NOT EXISTS SOLICITUD (
    ID_SOLICITUD INT PRIMARY KEY AUTO_INCREMENT,
    ID_CONTENEDOR INT,
    ID_CLIENTE INT,
    ID_ESTADO INT,
    COSTO_ESTIMADO DOUBLE,
    TIEMPO_ESTIMADO DOUBLE,
    COSTO_FINAL DOUBLE,
    TIEMPO_REAL DOUBLE,
    FOREIGN KEY (ID_CONTENEDOR) REFERENCES CONTENEDOR(ID_CONTENEDOR),
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
    FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO(ID_ESTADO)
);

-- 8Ô∏è‚É£ Tabla CAMION
CREATE TABLE IF NOT EXISTS CAMION (
    DOMINIO VARCHAR(10) PRIMARY KEY,
    NOMBRE_TRANSPORTISTA VARCHAR(255),
    TELEFONO_TRANSPORTISTA VARCHAR(20),
    CAPACIDAD_PESO DOUBLE,
    CAPACIDAD_VOLUMEN DOUBLE,
    DISPONIBLE BOOLEAN,
    COSTO_KM DOUBLE,
    CONSUMO_PROMEDIO DOUBLE
);

-- 9Ô∏è‚É£ Tabla RUTA
CREATE TABLE IF NOT EXISTS RUTA (
    ID_RUTA INT PRIMARY KEY AUTO_INCREMENT,
    ID_SOLICITUD INT,
    CANTIDAD_TRAMOS INT,
    CANTIDAD_DEPOSITOS INT,
    DISTANCIA_TOTAL DOUBLE,
    FOREIGN KEY (ID_SOLICITUD) REFERENCES SOLICITUD(ID_SOLICITUD)
);

-- üîü Tabla TIPOTRAMO
CREATE TABLE IF NOT EXISTS TIPOTRAMO (
    ID_TIPOTRAMO INT PRIMARY KEY AUTO_INCREMENT,
    DESCRIPCION VARCHAR(255)
);

-- 1Ô∏è‚É£1Ô∏è‚É£ Tabla TRAMO
CREATE TABLE IF NOT EXISTS TRAMO (
    ID_TRAMO INT PRIMARY KEY AUTO_INCREMENT,
    ID_RUTA INT,
    ID_TIPOTRAMO INT,
    ID_ESTADO INT,
    ID_CAMION VARCHAR(10),
    ID_ORIGEN INT,
    ID_DESTINO INT,
    DISTANCIA_KM DOUBLE,
    COSTO_APROXIMADO DOUBLE,
    COSTO_REAL DOUBLE,
    FECHA_HORA_INICIO DATETIME,
    FECHA_HORA_FIN DATETIME,
    FOREIGN KEY (ID_RUTA) REFERENCES RUTA(ID_RUTA),
    FOREIGN KEY (ID_TIPOTRAMO) REFERENCES TIPOTRAMO(ID_TIPOTRAMO),
    FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO(ID_ESTADO),
    FOREIGN KEY (ID_CAMION) REFERENCES CAMION(DOMINIO)
    -- Nota: ID_ORIGEN y ID_DESTINO se validar√°n en backend seg√∫n TIPOTRAMO
);

-- 1Ô∏è‚É£2Ô∏è‚É£ Tabla TARIFA
CREATE TABLE IF NOT EXISTS TARIFA (
    ID_TARIFA INT PRIMARY KEY AUTO_INCREMENT,
    DESCRIPCION VARCHAR(255),
    COSTO_BASE DOUBLE,
    COSTO_POR_KM DOUBLE,
    ID_TIPOTRAMO INT,
    FOREIGN KEY (ID_TIPOTRAMO) REFERENCES TIPOTRAMO(ID_TIPOTRAMO)
);
